name: Deploy Laravel Project on push
on:
  push:
    branches:
      - master
jobs:
  web-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest code
        uses: actions/checkout@v2.3.2
      - uses: actions/setup-node@master
      - name: Create production .env file
        run: |
          cat > .env << 'EOL'
          APP_NAME="SPMB SMP DISDIKPORA Cianjur 2025"
          APP_ENV=production
          APP_KEY=
          APP_DEBUG=false
          APP_URL=https://spmb.disdikpora-cianjur.com
          SITE_URL=https://spmb.disdikpora-cianjur.com
          SESSION_DOMAIN=.disdikpora-cianjur.com
          APP_URL_SCHEME=https
          APP_SSL=true
          FORCE_HTTPS=true

          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=error

          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=spmbsmpdisdikporacianjur
          DB_USERNAME=spmbsmpdisdikporacianjur
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          RECAPTCHA_SITEKEY=6Lc7M_sqAAAAACO25jV6EMyt7R2TR4WH9W8u8xZ1
          RECAPTCHA_SECRET=6Lc7M_sqAAAAAIwV1A-ocISOiez_JIuOI6fy6f9D

          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=database
          SESSION_DRIVER=file
          SESSION_LIFETIME=120

          MEMCACHED_HOST=127.0.0.1

          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379

          MAIL_MAILER=smtp
          MAIL_HOST=mailpit
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="${APP_NAME}"

          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false

          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_HOST=
          PUSHER_PORT=443
          PUSHER_SCHEME=https
          PUSHER_APP_CLUSTER=mt1

          VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
          VITE_PUSHER_HOST="${PUSHER_HOST}"
          VITE_PUSHER_PORT="${PUSHER_PORT}"
          VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
          VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

          VERSION="8.1.4"
          EOL
      - name: Create cache directories first
        run: |
          mkdir -p bootstrap/cache
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p storage/framework/cache
          mkdir -p storage/framework/testing
          chmod -R 777 storage bootstrap/cache
      - name: Update app.php to remove Debugbar
        run: |
          if [ -f "config/app.php" ]; then
            sed -i "/'aliases' => Facade::defaultAliases()->merge/,/->toArray(),/c\'aliases' => Facade::defaultAliases()->merge([\n        // 'ExampleClass' => App\\Example\\ExampleClass::class,\n        'PDF' => Barryvdh\\DomPDF\\Facade::class,\n        'DataTables' => Yajra\\DataTables\\Facades\\DataTables::class,\n        'Excel' => Maatwebsite\\Excel\\Facades\\Excel::class,\n    ])->toArray()," config/app.php
          fi
      - name: Install Dependencies
        run: composer install --optimize-autoloader --no-dev
      - name: Generate key
        run: php artisan key:generate
      - name: Generate storage link
        run: php artisan storage:link
      - name: Clear and optimize
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan view:clear
          php artisan route:clear
          php artisan optimize
      - name: Create deployment archive
        run: |
          tar -czf deployment.tar.gz --exclude=node_modules --exclude=.git --exclude=.github .
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy with SSH
        run: |
          scp deployment.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/deployment.tar.gz
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ${{ secrets.DEPLOY_PATH }} && 
            tar -xzf ~/deployment.tar.gz -C . && 
            rm ~/deployment.tar.gz && 
            php artisan migrate --force && 
            php artisan config:cache && 
            php artisan route:cache && 
            php artisan view:cache && 
            php artisan optimize
          "
